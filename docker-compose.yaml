# === Copyright
#
# Copyright (C) 2020  Atos Spain SA. All rights reserved.
#
# === License
#
# docker-compose.yaml is free software: you can redistribute it and/or modify it under the 
# terms of the Apache License, Version 2.0 (the License);
# 
# http://www.apache.org/licenses/LICENSE-2.0
# 
# The software is provided "AS IS", without any warranty of any kind, express or implied,
# including but not limited to the warranties of merchantability, fitness for a particular
# purpose and noninfringement, in no event shall the authors or copyright holders be 
# liable for any claim, damages or other liability, whether in action of contract, tort or
# otherwise, arising from, out of or in connection with the software or the use or other
# dealings in the software.
# 
# See README file for the full disclaimer information and LICENSE file for full license 
# information in the project root.
# 
# == docker-compose.yml
#
# Service composition to deploy the microservices architecture with Nginx, Keycloak, Service 
# Discovery, PPDDM Manager, F4H Portal GUI and F4H Backend.
#
# === Authors
#
# Author	Atos Research and Innovation, Atos SPAIN SA
# 

version: '3'

services:
# The reverse proxy providing https and redirecting to the rest of the services
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
#    labels:
#      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    volumes:
# Valid certificates configuration
#      - ${CONFIG_ROOT_FOLDER}/certs:/etc/nginx/certs 
# Letsencrypt certificates configuration
#      - certs:/etc/nginx/certs
#      - vhost.d:/etc/nginx/vhost.d
#      - nginx:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
#    network_mode: host
    ports:
# Production configuration
#      - 443:443
      - 80:80
    restart: always
# Letsencrypt nginx certificates provider
#  letsencrypt-nginx-proxy-companion:
#    image: jrcs/letsencrypt-nginx-proxy-companion:v1.9.1
#    depends_on:
#      - nginx-proxy
#    volumes:
#      - certs:/etc/nginx/certs
#      - vhost.d:/etc/nginx/vhost.d
#      - nginx:/usr/share/nginx/html
#      - /var/run/docker.sock:/tmp/docker.sock:ro

# MySQL database for KeyCloak
  mysql:
    image: mysql:5.7
    container_name: mysql
    volumes:
      - ${CONFIG_FOLDER}/mysql/data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DB}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - 3306:3306
    restart: always
    
# KeyCloak IdM configured for MySQL
  keycloak:
#    image: jboss/keycloak:3.4.3.Final
    image: jboss/keycloak
    container_name: keycloak
    environment:
      PROXY_ADDRESS_FORWARDING: ${PROXY_ADDRESS_FORWARDING}
      VIRTUAL_HOST: ${KEYCLOAK_VIRTUAL_HOST}
      DB_VENDOR: ${MYSQL_VENDOR}
      DB_ADDR: ${MYSQL_ADDR}
      DB_DATABASE: ${MYSQL_DB}
      DB_USER: ${MYSQL_USER}
      DB_PASSWORD: ${MYSQL_PASSWORD}
      KEYCLOAK_USER: ${KEYCLOAK_USER}
      KEYCLOAK_PASSWORD: ${KEYCLOAK_PASSWORD}
      JDBC_PARAMS: "useSSL=false"
# Configuration for 3.4.3
      MYSQL_PORT_3306_TCP_ADDR: ${MYSQL_TCP_ADDR}
      MYSQL_PORT_3306_TCP_PORT: ${MYSQL_TCP_PORT}
    volumes: 
      - ${CONFIG_FOLDER}/log/keycloak:/opt/jboss/keycloak/standalone/log
    ports:
      - 8080:8080
    depends_on:
      mysql:
          condition: service_healthy
    depends_on:
      - mysql
    restart: always

# Auth service
  auth:
    image: arihealth/oauth-easy:latest
    container_name: oauth-fair4health
    environment:
      KEYCLOAK_URL: ${KEYCLOAK_URL}
      KEYCLOAK_REALM: ${KEYCLOAK_REALM}
      KEYCLOAK_CLIENT_ID: ${KEYCLOAK_CLIENT_ID}
    restart: always
    
# KeyCloak proxy to authenticate Consul
  keycloak-proxy:
    image: jboss/keycloak-proxy:3.4.2.Final
#    image: jboss/keycloak-proxy
    container_name: keycloak-proxy
    environment: 
      PROXY_ADDRESS_FORWARDING: ${PROXY_ADDRESS_FORWARDING}
      VIRTUAL_HOST: ${KEYCLOAK_PROXY_VIRTUAL_HOST}
      VIRTUAL_PORT: ${KEYCLOAK_PROXY_VIRTUAL_PORT}
      TARGET_URL: ${KEYCLOAK_PROXY_TARGET_URL}
      BIND_ADDRESS: ${KEYCLOAK_PROXY_BIND_ADDRESS}
      HTTP_PORT: ${KEYCLOAK_PROXY_HTTP_PORT}
      BASE_PATH: ${KEYCLOAK_PROXY_BASE_PATH}
      REALM_NAME: ${KEYCLOAK_PROXY_REALM_NAME}
      AUTH_SERVER_URL: ${KEYCLOAK_PROXY_AUTH_SERVER}
      CLIENT_ID: ${KEYCLOAK_PROXY_CLIENT_ID}
      ROLE_ALLOWED: ${KEYCLOAK_PROXY_ROLE_ALLOWED}
      SSL_REQUIRED: ${KEYCLOAK_PROXY_SSL_REQUIRED}
    volumes: 
      - ${CONFIG_FOLDER}/keycloak/conf/proxy.json:/opt/jboss/conf/proxy.json
    ports:
      - 8180:8180
    depends_on:
      - consul
      - keycloak
    restart: always
# Consul GUI to manage services
  consul:
    container_name: consul
    image: consul:1.8.1
    environment:
      CONSUL_BIND_INTERFACE: eth0
    ports:
      - "8500:8500"
    restart: always

# Gateway service
  gateway:
    image: fair4health/gateway:latest
    container_name: gateway
    environment:
      PROXY_ADDRESS_FORWARDING: ${PROXY_ADDRESS_FORWARDING}
      VIRTUAL_HOST: ${GATEWAY_VIRTUAL_HOST}
      OAUTH_EASY_URL: ${OAUTH_EASY_URL}
      DISCOVERY_URL: ${DISCOVERY_URL}
    ports:
      - 8083:8083
    restart: always

# Service Discovery service
  discovery:
    image: fair4health/service-discovery:latest
    container_name: service-discovery
    environment:
      CONSUL_HOST: ${CONSUL_HOST}
      CONSUL_PORT: ${CONSUL_PORT}
      CONSUL_ENABLED: ${CONSUL_ENABLED}
      CONSUL_HEALTH_CHECK_INTERVAL: ${CONSUL_HEALTH_CHECK_INTERVAL}
      CONSUL_HEALTH_CHECK_TIMEOUT: ${CONSUL_HEALTH_CHECK_TIMEOUT}
    restart: always

# Portal UI
  f4h-portal-ui:
    image: fair4health/f4h-portal-ui:latest
    container_name: f4h-portal-ui
    environment:
      PROXY_ADDRESS_FORWARDING: ${PROXY_ADDRESS_FORWARDING}
      VIRTUAL_HOST: ${PORTAL_VIRTUAL_HOST}
      VIRTUAL_PORT: ${PORTAL_VIRTUAL_PORT}
    ports:
      - 4201:4200
    restart: always
